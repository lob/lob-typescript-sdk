/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as Models from "./index";

/**
 * Customize and place a QR code on the creative at the required position.
 * @export
 * @class QrCode
 */
export class QrCode {
  constructor(input?: any) {
    if (typeof input?.position !== "undefined") {
      this.position = input.position;
    }
    if (typeof input?.top !== "undefined") {
      this.top = input.top;
    }
    if (typeof input?.right !== "undefined") {
      this.right = input.right;
    }
    if (typeof input?.left !== "undefined") {
      this.left = input.left;
    }
    if (typeof input?.bottom !== "undefined") {
      this.bottom = input.bottom;
    }
    if (typeof input?.redirect_url !== "undefined") {
      this.redirect_url = input.redirect_url;
    }
    if (typeof input?.width !== "undefined") {
      this.width = input.width;
    }
  }

  /**
   * Sets how a QR code is being positioned in the document.
   * @type {string}
   * @memberof QrCode
   */
  "position": QrCodePositionEnum;

  /**
   * Vertical distance(in inches) to place QR code from the top.
   * @type {string}
   * @memberof QrCode
   */
  "top"?: string;

  /**
   * Horizonal distance(in inches) to place QR code from the right.
   * @type {string}
   * @memberof QrCode
   */
  "right"?: string;

  /**
   * Horizonal distance(in inches) to place QR code from the left.
   * @type {string}
   * @memberof QrCode
   */
  "left"?: string;

  /**
   * Vertical distance(in inches) to place QR code from the bottom.
   * @type {string}
   * @memberof QrCode
   */
  "bottom"?: string;

  /**
   * The url to redirect the user when a QR code is scanned. The url must start with `https://`
   * @type {string}
   * @memberof QrCode
   */
  "redirect_url": string;

  /**
   * The size(in inches) of the QR code. All QR codes are generated as a square.
   * @type {string}
   * @memberof QrCode
   */
  "width": string;

  public toJSON() {
    let out = {};
    for (const [key, value] of Object.entries(this)) {
      out = Object.assign({}, out, {
        [key[0] === "_" ? key.substr(1, key.length) : key]: value,
      });
    }
    return out;
  }
}

/**
 * @export
 * @enum {string}
 */
export enum QrCodePositionEnum {
  Fixed = "fixed",
  Relative = "relative",
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
