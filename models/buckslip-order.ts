/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as Models from "./index";

/**
 *
 * @export
 * @class BuckslipOrder
 */
export class BuckslipOrder {
  constructor(input?: any) {
    if (typeof input?.date_created !== "undefined") {
      this.date_created = input.date_created;
    }
    if (typeof input?.date_modified !== "undefined") {
      this.date_modified = input.date_modified;
    }
    if (typeof input?.deleted !== "undefined") {
      this.deleted = input.deleted;
    }
    if (typeof input?.object !== "undefined") {
      this.object = input.object;
    }
    if (typeof input?.id !== "undefined") {
      this.id = input.id;
    }
    if (typeof input?.buckslip_id !== "undefined") {
      this.buckslip_id = input.buckslip_id;
    }
    if (typeof input?.status !== "undefined") {
      this.status = input.status;
    }
    if (typeof input?.quantity_ordered !== "undefined") {
      this.quantity_ordered = input.quantity_ordered;
    }
    if (typeof input?.unit_price !== "undefined") {
      this.unit_price = input.unit_price;
    }
    if (typeof input?.inventory !== "undefined") {
      this.inventory = input.inventory;
    }
    if (typeof input?.cancelled_reason !== "undefined") {
      this.cancelled_reason = input.cancelled_reason;
    }
    if (typeof input?.availability_date !== "undefined") {
      this.availability_date = input.availability_date;
    }
    if (typeof input?.expected_availability_date !== "undefined") {
      this.expected_availability_date = input.expected_availability_date;
    }
  }

  /**
   * A timestamp in ISO 8601 format of the date the resource was created.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "date_created": string;

  /**
   * A timestamp in ISO 8601 format of the date the resource was last modified.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "date_modified": string;

  /**
   * Only returned if the resource has been successfully deleted.
   * @type {boolean}
   * @memberof BuckslipOrder
   */
  "deleted"?: boolean;

  /**
   * Value is type of resource.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "object": string;

  /**
   * Unique identifier prefixed with `bo_`.
   * @type {string}
   * @memberof BuckslipOrder
   */
  private "_id"?: string;
  public get id() {
    return (this._id || undefined) as string;
  }
  public set id(newValue: string) {
    if (newValue && !/^bo_[a-zA-Z0-9]+$/.test(newValue)) {
      throw new Error("Invalid id provided");
    }
    this._id = newValue;
  }

  /**
   * Unique identifier prefixed with `bck_`.
   * @type {string}
   * @memberof BuckslipOrder
   */
  private "_buckslip_id"?: string;
  public get buckslip_id() {
    return (this._buckslip_id || undefined) as string;
  }
  public set buckslip_id(newValue: string) {
    if (newValue && !/^bck_[a-zA-Z0-9]+$/.test(newValue)) {
      throw new Error("Invalid buckslip_id provided");
    }
    this._buckslip_id = newValue;
  }

  /**
   * The status of the buckslip order.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "status"?: BuckslipOrderStatusEnum;

  /**
   * The quantity of buckslips ordered.
   * @type {number}
   * @memberof BuckslipOrder
   */
  "quantity_ordered"?: number;

  /**
   * The unit price for the buckslip order.
   * @type {number}
   * @memberof BuckslipOrder
   */
  "unit_price"?: number;

  /**
   * The inventory of the buckslip order.
   * @type {number}
   * @memberof BuckslipOrder
   */
  "inventory"?: number;

  /**
   * The reason for cancellation.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "cancelled_reason"?: string;

  /**
   * A timestamp in ISO 8601 format of the date the resource was created.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "availability_date"?: string;

  /**
   * The fixed deadline for the buckslips to be printed.
   * @type {string}
   * @memberof BuckslipOrder
   */
  "expected_availability_date"?: string;

  public toJSON() {
    let out = {};
    for (const [key, value] of Object.entries(this)) {
      out = Object.assign({}, out, {
        [key[0] === "_" ? key.substr(1, key.length) : key]: value,
      });
    }
    return out;
  }
}

/**
 * @export
 * @enum {string}
 */
export enum BuckslipOrderStatusEnum {
  Pending = "pending",
  Printing = "printing",
  Available = "available",
  Cancelled = "cancelled",
  Depleted = "depleted",
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
