/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as Models from "./index";

import { UploadState } from "./upload-state";

/**
 *
 * @export
 * @class Upload
 */
export class Upload {
  constructor(input?: any) {
    if (typeof input?.id !== "undefined") {
      this.id = input.id;
    }
    if (typeof input?.accountId !== "undefined") {
      this.accountId = input.accountId;
    }
    if (typeof input?.campaignId !== "undefined") {
      this.campaignId = input.campaignId;
    }
    if (typeof input?.mode !== "undefined") {
      this.mode = input.mode;
    }
    if (typeof input?.failuresUrl !== "undefined") {
      this.failuresUrl = input.failuresUrl;
    }
    if (typeof input?.originalFilename !== "undefined") {
      this.originalFilename = input.originalFilename;
    }
    if (typeof input?.state !== "undefined") {
      this.state = input.state;
    }
    if (typeof input?.totalMailpieces !== "undefined") {
      this.totalMailpieces = input.totalMailpieces;
    }
    if (typeof input?.failedMailpieces !== "undefined") {
      this.failedMailpieces = input.failedMailpieces;
    }
    if (typeof input?.validatedMailpieces !== "undefined") {
      this.validatedMailpieces = input.validatedMailpieces;
    }
    if (typeof input?.bytesProcessed !== "undefined") {
      this.bytesProcessed = input.bytesProcessed;
    }
    if (typeof input?.dateCreated !== "undefined") {
      this.dateCreated = input.dateCreated;
    }
    if (typeof input?.dateModified !== "undefined") {
      this.dateModified = input.dateModified;
    }
    if (typeof input?.deleted !== "undefined") {
      this.deleted = input.deleted;
    }
  }

  /**
   * Unique identifier prefixed with `upl_`.
   * @type {string}
   * @memberof Upload
   */
  private "_id": string;
  public get id() {
    return this._id;
  }
  public set id(newValue: string) {
    if (newValue && !/^upl_[a-zA-Z0-9]+$/.test(newValue)) {
      throw new Error("Invalid id provided");
    }
    this._id = newValue;
  }

  /**
   * Account ID that made the request
   * @type {string}
   * @memberof Upload
   */
  "accountId": string;

  /**
   * Unique identifier prefixed with `cmp_`.
   * @type {string}
   * @memberof Upload
   */
  private "_campaignId": string;
  public get campaignId() {
    return this._campaignId;
  }
  public set campaignId(newValue: string) {
    if (newValue && !/^cmp_[a-zA-Z0-9]+$/.test(newValue)) {
      throw new Error("Invalid campaignId provided");
    }
    this._campaignId = newValue;
  }

  /**
   * The environment in which the mailpieces were created. Today, will only be `live`.
   * @type {string}
   * @memberof Upload
   */
  "mode": UploadModeEnum;

  /**
   * Url where your campaign mailpiece failures can be retrieved
   * @type {string}
   * @memberof Upload
   */
  "failuresUrl"?: string;

  /**
   * Filename of the upload
   * @type {string}
   * @memberof Upload
   */
  "originalFilename"?: string;

  /**
   *
   * @type {UploadState}
   * @memberof Upload
   */
  "state": UploadState;

  /**
   * Total number of recipients for the campaign
   * @type {number}
   * @memberof Upload
   */
  "totalMailpieces": number;

  /**
   * Number of mailpieces that failed to create
   * @type {number}
   * @memberof Upload
   */
  "failedMailpieces": number;

  /**
   * Number of mailpieces that were successfully created
   * @type {number}
   * @memberof Upload
   */
  "validatedMailpieces": number;

  /**
   * Number of bytes processed in your CSV
   * @type {number}
   * @memberof Upload
   */
  "bytesProcessed": number;

  /**
   * A timestamp in ISO 8601 format of the date the upload was created
   * @type {string}
   * @memberof Upload
   */
  "dateCreated": string;

  /**
   * A timestamp in ISO 8601 format of the date the upload was last modified
   * @type {string}
   * @memberof Upload
   */
  "dateModified": string;

  /**
   * Only returned if the resource has been successfully deleted.
   * @type {boolean}
   * @memberof Upload
   */
  "deleted"?: boolean;

  public toJSON() {
    let out = {};
    for (const [key, value] of Object.entries(this)) {
      out = Object.assign({}, out, {
        [key[0] === "_" ? key.substr(1, key.length) : key]: value,
      });
    }
    return out;
  }
}

/**
 * @export
 * @enum {string}
 */
export enum UploadModeEnum {
  Test = "test",
  Live = "live",
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
