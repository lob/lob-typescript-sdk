"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LobErrorCodeEnum =
  exports.LobErrorStatusCodeEnum =
  exports.LobError =
    void 0;
/**
 * Lob uses RESTful HTTP response codes to indicate success or failure of an API request.
 * @export
 * @class LobError
 */
var LobError = /** @class */ (function () {
  function LobError(input) {
    if (
      typeof (input === null || input === void 0 ? void 0 : input.message) !==
      "undefined"
    ) {
      this.message = input.message;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.status_code) !== "undefined"
    ) {
      this.status_code = input.status_code;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.code) !==
      "undefined"
    ) {
      this.code = input.code;
    }
  }
  return LobError;
})();
exports.LobError = LobError;
/**
 * @export
 * @enum {string}
 */
var LobErrorStatusCodeEnum;
(function (LobErrorStatusCodeEnum) {
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_401"] = 401)] =
    "NUMBER_401";
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_403"] = 403)] =
    "NUMBER_403";
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_404"] = 404)] =
    "NUMBER_404";
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_413"] = 413)] =
    "NUMBER_413";
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_422"] = 422)] =
    "NUMBER_422";
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_429"] = 429)] =
    "NUMBER_429";
  LobErrorStatusCodeEnum[(LobErrorStatusCodeEnum["NUMBER_500"] = 500)] =
    "NUMBER_500";
})(
  (LobErrorStatusCodeEnum =
    exports.LobErrorStatusCodeEnum || (exports.LobErrorStatusCodeEnum = {}))
);
/**
 * @export
 * @enum {string}
 */
var LobErrorCodeEnum;
(function (LobErrorCodeEnum) {
  LobErrorCodeEnum["BadRequest"] = "bad_request";
  LobErrorCodeEnum["Conflict"] = "conflict";
  LobErrorCodeEnum["FeatureLimitReached"] = "feature_limit_reached";
  LobErrorCodeEnum["InternalServerError"] = "internal_server_error";
  LobErrorCodeEnum["Invalid"] = "invalid";
  LobErrorCodeEnum["NotDeletable"] = "not_deletable";
  LobErrorCodeEnum["NotFound"] = "not_found";
  LobErrorCodeEnum["RequestTimeout"] = "request_timeout";
  LobErrorCodeEnum["ServiceUnavailable"] = "service_unavailable";
  LobErrorCodeEnum["UnrecognizedEndpoint"] = "unrecognized_endpoint";
  LobErrorCodeEnum["UnsupportedLobVersion"] = "unsupported_lob_version";
  LobErrorCodeEnum["AddressLengthExceedsLimit"] =
    "address_length_exceeds_limit";
  LobErrorCodeEnum["BankAccountAlreadyVerified"] =
    "bank_account_already_verified";
  LobErrorCodeEnum["BankError"] = "bank_error";
  LobErrorCodeEnum["CustomEnvelopeInventoryDepleted"] =
    "custom_envelope_inventory_depleted";
  LobErrorCodeEnum["DeletedBankAccount"] = "deleted_bank_account";
  LobErrorCodeEnum["FailedDeliverabilityStrictness"] =
    "failed_deliverability_strictness";
  LobErrorCodeEnum["FilePagesBelowMin"] = "file_pages_below_min";
  LobErrorCodeEnum["FilePagesExceedMax"] = "file_pages_exceed_max";
  LobErrorCodeEnum["FileSizeExceedsLimit"] = "file_size_exceeds_limit";
  LobErrorCodeEnum["ForeignReturnAddress"] = "foreign_return_address";
  LobErrorCodeEnum["InconsistentPageDimensions"] =
    "inconsistent_page_dimensions";
  LobErrorCodeEnum["InvalidBankAccount"] = "invalid_bank_account";
  LobErrorCodeEnum["InvalidBankAccountVerification"] =
    "invalid_bank_account_verification";
  LobErrorCodeEnum["InvalidCheckInternational"] = "invalid_check_international";
  LobErrorCodeEnum["InvalidCountryCovid"] = "invalid_country_covid";
  LobErrorCodeEnum["InvalidFile"] = "invalid_file";
  LobErrorCodeEnum["InvalidFileDimensions"] = "invalid_file_dimensions";
  LobErrorCodeEnum["InvalidFileDownloadTime"] = "invalid_file_download_time";
  LobErrorCodeEnum["InvalidFileUrl"] = "invalid_file_url";
  LobErrorCodeEnum["InvalidImageDpi"] = "invalid_image_dpi";
  LobErrorCodeEnum["InvalidInternationalFeature"] =
    "invalid_international_feature";
  LobErrorCodeEnum["InvalidPerforationReturnEnvelope"] =
    "invalid_perforation_return_envelope";
  LobErrorCodeEnum["InvalidTemplateHtml"] = "invalid_template_html";
  LobErrorCodeEnum["MergeVariableRequired"] = "merge_variable_required";
  LobErrorCodeEnum["MergeVariableWhitespace"] = "merge_variable_whitespace";
  LobErrorCodeEnum["PaymentMethodUnverified"] = "payment_method_unverified";
  LobErrorCodeEnum["PdfEncrypted"] = "pdf_encrypted";
  LobErrorCodeEnum["SpecialCharactersRestricted"] =
    "special_characters_restricted";
  LobErrorCodeEnum["UnembeddedFonts"] = "unembedded_fonts";
  LobErrorCodeEnum["EmailRequired"] = "email_required";
  LobErrorCodeEnum["InvalidApiKey"] = "invalid_api_key";
  LobErrorCodeEnum["PublishableKeyNotAllowed"] = "publishable_key_not_allowed";
  LobErrorCodeEnum["RateLimitExceeded"] = "rate_limit_exceeded";
  LobErrorCodeEnum["Unauthorized"] = "unauthorized";
  LobErrorCodeEnum["UnauthorizedToken"] = "unauthorized_token";
})(
  (LobErrorCodeEnum =
    exports.LobErrorCodeEnum || (exports.LobErrorCodeEnum = {}))
);
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
