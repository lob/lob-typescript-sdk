"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackingEventNormalObjectEnum =
  exports.TrackingEventNormalDetailsEnum =
  exports.TrackingEventNormalNameEnum =
  exports.TrackingEventNormalTypeEnum =
  exports.TrackingEventNormal =
    void 0;
/**
 *
 * @export
 * @class TrackingEventNormal
 */
var TrackingEventNormal = /** @class */ (function () {
  function TrackingEventNormal(input) {
    if (
      typeof (input === null || input === void 0 ? void 0 : input.type) !==
      "undefined"
    ) {
      this.type = input.type;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.name) !==
      "undefined"
    ) {
      this.name = input.name;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.details) !==
      "undefined"
    ) {
      this.details = input.details;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.location) !==
      "undefined"
    ) {
      this.location = input.location;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.id) !==
      "undefined"
    ) {
      this.id = input.id;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.time) !==
      "undefined"
    ) {
      this.time = input.time;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.date_created) !== "undefined"
    ) {
      this.date_created = input.date_created;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.date_modified) !== "undefined"
    ) {
      this.date_modified = input.date_modified;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.object) !==
      "undefined"
    ) {
      this.object = input.object;
    }
  }
  Object.defineProperty(TrackingEventNormal.prototype, "id", {
    get: function () {
      return this._id || undefined;
    },
    set: function (newValue) {
      if (newValue && !/^evnt_[a-zA-Z0-9]+$/.test(newValue)) {
        throw new Error("Invalid id provided");
      }
      this._id = newValue;
    },
    enumerable: false,
    configurable: true,
  });
  return TrackingEventNormal;
})();
exports.TrackingEventNormal = TrackingEventNormal;
/**
 * @export
 * @enum {string}
 */
var TrackingEventNormalTypeEnum;
(function (TrackingEventNormalTypeEnum) {
  TrackingEventNormalTypeEnum["Normal"] = "normal";
})(
  (TrackingEventNormalTypeEnum =
    exports.TrackingEventNormalTypeEnum ||
    (exports.TrackingEventNormalTypeEnum = {}))
);
/**
 * @export
 * @enum {string}
 */
var TrackingEventNormalNameEnum;
(function (TrackingEventNormalNameEnum) {
  TrackingEventNormalNameEnum["InTransit"] = "In Transit";
  TrackingEventNormalNameEnum["InLocalArea"] = "In Local Area";
  TrackingEventNormalNameEnum["ProcessedForDelivery"] =
    "Processed for Delivery";
  TrackingEventNormalNameEnum["ReRouted"] = "Re-Routed";
  TrackingEventNormalNameEnum["ReturnedToSender"] = "Returned to Sender";
  TrackingEventNormalNameEnum["Mailed"] = "Mailed";
})(
  (TrackingEventNormalNameEnum =
    exports.TrackingEventNormalNameEnum ||
    (exports.TrackingEventNormalNameEnum = {}))
);
/**
 * @export
 * @enum {string}
 */
var TrackingEventNormalDetailsEnum;
(function (TrackingEventNormalDetailsEnum) {
  TrackingEventNormalDetailsEnum["Null"] = "null";
})(
  (TrackingEventNormalDetailsEnum =
    exports.TrackingEventNormalDetailsEnum ||
    (exports.TrackingEventNormalDetailsEnum = {}))
);
/**
 * @export
 * @enum {string}
 */
var TrackingEventNormalObjectEnum;
(function (TrackingEventNormalObjectEnum) {
  TrackingEventNormalObjectEnum["TrackingEvent"] = "tracking_event";
})(
  (TrackingEventNormalObjectEnum =
    exports.TrackingEventNormalObjectEnum ||
    (exports.TrackingEventNormalObjectEnum = {}))
);
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
