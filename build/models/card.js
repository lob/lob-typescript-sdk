"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardSizeEnum =
  exports.CardObjectEnum =
  exports.CardOrientationEnum =
  exports.CardStatusEnum =
  exports.Card =
    void 0;
/**
 *
 * @export
 * @class Card
 */
var Card = /** @class */ (function () {
  function Card(input) {
    if (
      typeof (input === null || input === void 0 ? void 0 : input.id) !==
      "undefined"
    ) {
      this.id = input.id;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.url) !==
      "undefined"
    ) {
      this.url = input.url;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.auto_reorder) !== "undefined"
    ) {
      this.auto_reorder = input.auto_reorder;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.reorder_quantity) !== "undefined"
    ) {
      this.reorder_quantity = input.reorder_quantity;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.raw_url) !==
      "undefined"
    ) {
      this.raw_url = input.raw_url;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.front_original_url) !== "undefined"
    ) {
      this.front_original_url = input.front_original_url;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.back_original_url) !== "undefined"
    ) {
      this.back_original_url = input.back_original_url;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.thumbnails) !== "undefined"
    ) {
      this.thumbnails = input.thumbnails;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.available_quantity) !== "undefined"
    ) {
      this.available_quantity = input.available_quantity;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.pending_quantity) !== "undefined"
    ) {
      this.pending_quantity = input.pending_quantity;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.status) !==
      "undefined"
    ) {
      this.status = input.status;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.orientation) !== "undefined"
    ) {
      this.orientation = input.orientation;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.threshold_amount) !== "undefined"
    ) {
      this.threshold_amount = input.threshold_amount;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.date_created) !== "undefined"
    ) {
      this.date_created = input.date_created;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.date_modified) !== "undefined"
    ) {
      this.date_modified = input.date_modified;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.deleted) !==
      "undefined"
    ) {
      this.deleted = input.deleted;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.object) !==
      "undefined"
    ) {
      this.object = input.object;
    }
    if (
      typeof (input === null || input === void 0
        ? void 0
        : input.description) !== "undefined"
    ) {
      this.description = input.description;
    }
    if (
      typeof (input === null || input === void 0 ? void 0 : input.size) !==
      "undefined"
    ) {
      this.size = input.size;
    }
  }
  Object.defineProperty(Card.prototype, "id", {
    get: function () {
      return this._id || undefined;
    },
    set: function (newValue) {
      if (newValue && !/^card_[a-zA-Z0-9]+$/.test(newValue)) {
        throw new Error("Invalid id provided");
      }
      this._id = newValue;
    },
    enumerable: false,
    configurable: true,
  });
  return Card;
})();
exports.Card = Card;
/**
 * @export
 * @enum {string}
 */
var CardStatusEnum;
(function (CardStatusEnum) {
  CardStatusEnum["Processed"] = "processed";
  CardStatusEnum["Rendered"] = "rendered";
})((CardStatusEnum = exports.CardStatusEnum || (exports.CardStatusEnum = {})));
/**
 * @export
 * @enum {string}
 */
var CardOrientationEnum;
(function (CardOrientationEnum) {
  CardOrientationEnum["Horizontal"] = "horizontal";
  CardOrientationEnum["Vertical"] = "vertical";
})(
  (CardOrientationEnum =
    exports.CardOrientationEnum || (exports.CardOrientationEnum = {}))
);
/**
 * @export
 * @enum {string}
 */
var CardObjectEnum;
(function (CardObjectEnum) {
  CardObjectEnum["Card"] = "card";
})((CardObjectEnum = exports.CardObjectEnum || (exports.CardObjectEnum = {})));
/**
 * @export
 * @enum {string}
 */
var CardSizeEnum;
(function (CardSizeEnum) {
  CardSizeEnum["_3375x2125"] = "3.375x2.125";
  CardSizeEnum["_2125x3375"] = "2.125x3.375";
})((CardSizeEnum = exports.CardSizeEnum || (exports.CardSizeEnum = {})));
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
